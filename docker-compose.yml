version: '3.9'

services:
  server:
    container_name: server_dev
    command: npm run start
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
      target: development
    networks:
      - server
      - client
    depends_on:
      - db
      - redis
    volumes:
      - ./api/:/usr/src/app/
      - /usr/src/app/node_modules
    restart: unless-stopped
    environment:
      DB_URL: $DB_URL
      MEMORY_STORAGE_URL: $MEMORY_STORAGE_URL
      MEMORY_STORAGE_TTL_IN_SECONDS: $MEMORY_STORAGE_TTL_IN_SECONDS
      APP_PORT: $APP_PORT
      APP_BASE_URL: $APP_BASE_URL
      APP_LOGS_PATH: $APP_LOGS_PATH
      JWT_SECRET: $JWT_SECRET
      JWT_EXPIRES_IN: $JWT_EXPIRES_IN
    ports:
      - "8085:8085"
    tty: true

  client:
    image: kinkan1/web-app-client
    container_name: client
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    depends_on:
      - server
    networks:
      - client
    ports:
      - "80:80"
      - "443:443"

  db:
    image: postgres:15-alpine
    restart: always
    container_name: db
    networks:
      - server
    volumes:
      - ./.data/psql:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
    expose:
      - "5432"
    ports:
      - "5432:5432"

  redis:
    container_name: redis
    image: redis:7.0.7
    networks:
      - server
    ports:
      - "6379:6379"

networks:
  client:
  server:
