version: '3.9'

services:
  server:
    image: kinkan1/web-app-server
    entrypoint: ["./setup-db.sh"]
    command: ["node", "dist/main.js"]
    container_name: server
    networks:
      - server
      - client
    depends_on:
      - db
      - redis
    volumes:
      - ./api/logs:/usr/src/app/logs
    restart: unless-stopped
    environment:
      DB_URL: $DB_URL
      MEMORY_STORAGE_URL: $MEMORY_STORAGE_URL
      MEMORY_STORAGE_TTL_IN_SECONDS: $MEMORY_STORAGE_TTL_IN_SECONDS
      APP_PORT: $APP_PORT
      APP_BASE_URL: $APP_BASE_URL
      APP_LOGS_PATH: $APP_LOGS_PATH
      JWT_SECRET: $JWT_SECRET
      JWT_EXPIRES_IN: $JWT_EXPIRES_IN

  db:
    image: postgres:15-alpine
    restart: always
    container_name: db
    networks:
      - server
    volumes:
      - ./.data/psql:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
    expose:
      - "5432"

  redis:
    container_name: redis
    image: redis:7.0.7
    command: redis-server --save "60 1"
    volumes:
      - ./.data/redis:/data
    networks:
      - server

  client:
    image: kinkan1/web-app-client
    container_name: client
    depends_on:
      - server
    networks:
      - client
    ports:
      - "80:80"
      - "443:443"

networks:
  client:
  server:
